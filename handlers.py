from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
import request_my_sklad as req
import keyboard as kb                         # –∏–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from db.administration_DB import requsets_DB_retail,request_db_pay_achent

router = Router()

@router.message(F.from_user.id != 1007925403)
async def handle_unwanted_users(message: Message):
    await message.answer(text="–Ω–µ —Ç—É–¥–∞ —Ç—ã –ø–æ–ø–∞–ª,–¥—Ä—É–∂–æ–∫!")
    await message.answer_photo("https://cs.pikabu.ru/post_img/2013/12/22/6/1387695893_547621352.jpg",caption="–¥–∞–π —É–≥–∞–¥–∞—é,–∫—Ç–æ-—Ç–æ —É–∫—Ä–∞–ª —Ç–≤–æ–π —Å–ª–∞–¥–∫–∏–π —Ä—É–ª–µ—Ç?")

@router.message(Command('start'))                                           # –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É
async def get_help(message: Message):                                       # –Ω–∞–ø—Ä–∏–º–µ—Ä "help" , "start", "reg" –∏ —Ç.–¥.
    await message.answer("–ü—Ä–∏–≤–µ—Ç,–≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç",reply_markup=kb.main)           # –∑–¥–µ—Å—å —Å—Ç–∞–≤–∏–º –Ω–∞ –ø–µ—Ä–≤—É—é –∫–æ–º–Ω–¥—É –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤—É

@router.message(F.text == "–ú–∞–≥–∞–∑–∏–Ω—ãüõç")                                      # –í F.text —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—à–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def how_are_you(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∑–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥",reply_markup=kb.shop)

@router.message(F.text == "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏üë•")
async def period_employ(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥",reply_markup=kb.employ)

@router.message(F.text == "–ê–∫—Ü–µ–Ω—Ç—ãüí∞")
async def acchent(message: Message):
    await message.answer(f"""–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –∞–∫—Ü–µ–Ω—Ç—ã:
<b>–ü–µ—Ä–≤—ã–π –∂–∏–≤–æ–π –∫–æ–ª–ª–∞–≥–µ–Ω (300—Ä)</b>
<b>–ê–ø–æ—Ç–µ–∫–∞ –∫–∞—Ä—Ç–æ–Ω (400—Ä)</b>
<b>–ê–ø–æ—Ç–µ–∫–∞ —Å—Ç–µ–∫–ª–æ (300—Ä)</b>
<b>–õ–∞–±–µ–ª–ª–æ (500—Ä)</b>
<b>Marine Collagen 1+1 (200)</b>
""",parse_mode="HTML",reply_markup= await kb.employy_achent_mounth())

@router.callback_query(F.data == 'today_employ')
async def catalog(callback:CallbackQuery):
    await callback.answer('')
    await callback.message.answer(text="–ü—Ä–æ–¥–∞–≤—Ü—ã:",reply_markup= await kb.employy_today())
    await callback.message.delete()

@router.callback_query(F.data == 'mouth_employ')
async def catalog(callback:CallbackQuery):
    await callback.answer('')
    await callback.message.answer(text="–ü—Ä–æ–¥–∞–≤—Ü—ã:",reply_markup= await kb.employy_mounth())
    await callback.message.delete()

@router.callback_query(F.data.regexp(r"achent_,*"))
async def data_in_achent(callback:CallbackQuery):
    await callback.answer("")
    await callback.message.answer(f"""<b>{callback.data[7:]}</b>
    
<b>10% –æ—Ç –≤—ã—Ä—É—á–∫–∏</b>: {req.achent_and_employ_pay(callback.data)}

<b>–û–∫–ª–∞–¥ –∑–∞ —Å–º–µ–Ω—ã</b>: {requsets_DB_retail(callback.data[7:])}
 
<b>–ê–ø–æ—Ç–µ–∫–∞ –∫–∞—Ä—Ç–æ–Ω</b>: {int(request_db_pay_achent(callback.data[7:])[0][0]) * 400}

<b>–ê–ø–æ—Ç–µ–∫–∞ —Å—Ç–µ–∫–ª–æ</b>: {int(request_db_pay_achent(callback.data[7:])[0][1]) * 300}

<i>–ò—Ç–æ–≥–æ</i>: <i>{int(req.achent_and_employ_pay(callback.data)) + int(requsets_DB_retail(callback.data[7:])) +
               (int(request_db_pay_achent(callback.data[7:])[0][0]) * 400) + (int(request_db_pay_achent(callback.data[7:])[0][1]) * 300)}</i>
""",parse_mode="HTML")
