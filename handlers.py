from aiogram import F, Router
from aiogram.filters import CommandStart,Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import ReplyKeyboardBuilder,InlineKeyboardBuilder        # –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å –∑–∞–ø—Ä–æ—Å–æ–º

import request_my_sklad as req
import HTTP_FOR_TODAY_SHOP as HTTP
import keyboard as kb                         # –∏–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

router = Router()

@router.message(F.from_user.id != 1007925403)
async def handle_unwanted_users(message: Message):
    await message.answer(text="–Ω–µ —Ç—É–¥–∞ —Ç—ã –ø–æ–ø–∞–ª,–¥—Ä—É–∂–æ–∫!")
    await message.answer_photo("https://cs.pikabu.ru/post_img/2013/12/22/6/1387695893_547621352.jpg",caption="–¥–∞–π —É–≥–∞–¥–∞—é,–∫—Ç–æ-—Ç–æ —É–∫—Ä–∞–ª —Ç–≤–æ–π —Å–ª–∞–¥–∫–∏–π —Ä—É–ª–µ—Ç?")

@router.message(Command('start'))                                           # –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É
async def get_help(message: Message):                                       # –Ω–∞–ø—Ä–∏–º–µ—Ä "help" , "start", "reg" –∏ —Ç.–¥.
    await message.answer("–ü—Ä–∏–≤–µ—Ç,–≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç",reply_markup=kb.main)           # –∑–¥–µ—Å—å —Å—Ç–∞–≤–∏–º –Ω–∞ –ø–µ—Ä–≤—É—é –∫–æ–º–Ω–¥—É –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤—É

@router.message(F.text == "–ú–∞–≥–∞–∑–∏–Ω—ãüõç")                                      # –í F.text —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—à–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def how_are_you(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∑–∞ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥",reply_markup=kb.shop)

@router.message(F.text == "–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏üë•")
async def period_employ(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø–µ—Ä–∏–æ–¥",reply_markup=kb.employ)



@router.callback_query(F.data == 'today_shop')
async def catalog(callback:CallbackQuery):
    await callback.answer('')                        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫–æ–µ_–ª–∏–±–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ,—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∞—ë—Ç –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å
    await callback.message.answer(text="–ú–∞–≥–∞–∑–∏–Ω—ã:",reply_markup= await kb.store_today())
    await callback.message.delete()
    await callback.message.answer(f"""
    {req.requests_all(HTTP.ALL_TODAY)}
    """)

@router.callback_query(F.data == 'month_shop')
async def catalog(callback:CallbackQuery):
    await callback.answer('')                        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫–æ–µ_–ª–∏–±–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ,—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∞—ë—Ç –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å
    await callback.message.answer(text="–ú–∞–≥–∞–∑–∏–Ω—ã:",reply_markup= await kb.store_mount())
    await callback.message.delete()
    await callback.message.answer(f"""
    {req.requests_all(HTTP.ALL_MOUNTH)}
    """)

@router.callback_query(F.data == 'today_employ')
async def catalog(callback:CallbackQuery):
    await callback.answer('')                        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫–æ–µ_–ª–∏–±–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ,—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∞—ë—Ç –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å
    await callback.message.answer(text="–ü—Ä–æ–¥–∞–≤—Ü—ã:",reply_markup= await kb.employy_today())
    await callback.message.delete()
    # await callback.message.answer(f"""
    # {req.requests_all(HTTP.ALL_MOUNTH)}
    # """)

@router.callback_query(F.data == 'mouth_employ')
async def catalog(callback:CallbackQuery):
    await callback.answer('')                        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫–æ–µ_–ª–∏–±–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ,—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∞—ë—Ç –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å
    await callback.message.answer(text="–ü—Ä–æ–¥–∞–≤—Ü—ã:",reply_markup= await kb.employy_mounth())
    await callback.message.delete()
    # await callback.message.answer(f"""
    # {req.requests_all(HTTP.ALL_MOUNTH)}
    # """)

